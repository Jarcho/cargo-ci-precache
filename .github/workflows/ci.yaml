name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - ".github/workflows/release.yaml"
      - "CHANGELOG.md"
      - "README.md"
      - "LICENSE-APACHE"
      - "LICENSE-MIT"
  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/release.yaml"
      - "CHANGELOG.md"
      - "README.md"
      - "LICENSE-APACHE"
      - "LICENSE-MIT"
  schedule:
    - cron: "0 0 * * 0,3"

env:
  CARGO_INCREMENTAL: 0

jobs:
  check-update:
    if: github.event_name == 'schedule'
    name: Check for updates
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.update.outputs.has_updates }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: rustup
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: cargo update
        id: update
        run: |
          cp Cargo.lock Cargo.lock.old
          cargo update
          cmp --silent Cargo.lock Cargo.lock.old \
            && echo "::set-output name=has_updates::false" \
            || echo "::set-output name=has_updates::true"

      - name: Upload lockfile
        if: steps.update.outputs.has_updates == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: lockfile
          path: |
            ./Cargo.lock

  test-stable:
    if: github.event_name != 'schedule' || needs.check-update.outputs.has_updates == 'true'
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        include:
          - os: ubuntu
            components: rustfmt, clippy
    runs-on: ${{ matrix.os }}-latest

    name: ${{ matrix.os }}-stable

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        id: rustup
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: ${{ matrix.components }}

      - name: Download lockfile
        if: needs.check-update.outputs.has_updates == 'true'
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache-deps
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
          key: deps-${{ hashfiles('./Cargo.lock') }}
          restore-keys: deps

      - name: Fetch Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          cargo fetch --target x86_64-pc-windows-msvc
          cargo fetch --target x86_64-apple-darwin
          cargo fetch --target x86_64-unknown-linux-gnu

      # - name: Cache build dependencies
      #   uses: actions/cache@v2
      #   id: cache-build-deps
      #   with:
      #     path: |
      #       ./target/debug
      #     key: build-deps-${{ steps.rustup.outputs.rustc_hash }}-${{ hashfiles('./Cargo.lock') }}
      #     restore-keys: build-deps-${{ steps.rustup.outputs.rustc_hash }}

      - name: Test
        run: cargo test --workspace

      - name: Format
        if: matrix.os == 'ubuntu'
        run: cargo fmt --all -- --check

      - name: Clippy
        if: matrix.os == 'ubuntu'
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Pre-cache dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: cargo run -- cargo-cache --temp=./temp

      # - name: Pre-cache build dependencies
      #   if: steps.cache-build-deps.outputs.cache-hit != 'true'
      #   run: cargo run -- target --temp=./temp

  push-lockfile:
    needs: [test-stable, check-update]
    if: needs.test-stable.result == 'success' && needs.check-update.outputs.has_updates == 'true'

    name: Push lockfile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download lockfile
        uses: actions/download-artifact@v2
        with:
          name: lockfile

      - name: Push lockfile
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add Cargo.lock
          git commit -m "Update Cargo.lock"
          git push 'https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY' main
